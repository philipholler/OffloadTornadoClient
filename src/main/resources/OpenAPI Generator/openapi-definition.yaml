openapi: "3.0.3"
info:
  description: "Semester project for 7th semester at Aalborg University"
  version: "1.0.0"
  title: "Offloading"
servers:
  - url: http://localhost:8080

tags:
  - name : user
  - name : job
  - name : assignment

components:
  schemas:
    Job:
      type: object
      properties:
        id:
          type: integer
          format: int64
          default: 0
        name:
          type: string
        jobpath:
          type: string
        timestamp:
          type: integer
          format: int64
          default: 0
        status:
          type: string
        employer:
          type: string
        answersNeeded:
          type: integer
        workersAssigned:
          type: integer
        timeoutInMinutes:
          type: integer
        confidenceLevel:
          type: number
          format: double

    Statistics:
      type: object
      properties:
        didFinish:
          type: boolean
        cpuTime:
          type: integer
          format: int64

    Result:
      type: object
      properties:
        jobid:
          type: integer
          format: int64
        resultfile:
          type: string
          format: byte
        statistics:
          $ref: '#/components/schemas/Statistics'


    JobFiles:
      type: object
      properties:
        jobid:
          type: integer
          format: int64
        data:
          type: string
          format: byte

    UserCredentials:
      type: object
      properties:
        username:
          type: string
        password:
          type: string

    DeviceId:
      type: object
      properties:
        uuid:
          type: string

    JobId:
      type: object
      properties:
        jobID:
          type: integer
          format: int64

paths:
  # Users
  /users/{userCredentials}:
    post:
      tags:
        - user
      description: Creates a user
      operationId: createUser
      parameters:
        - name: userCredentials
          in: path
          description: Credentials used to create new user
          required: true
          schema:
            $ref: '#/components/schemas/UserCredentials'
      responses:
        '200':
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentials'

    get:
      tags:
        - user
      description: Fakes a login
      operationId: login
      parameters:
        - name: userCredentials
          in: path
          description: Credentials used to login user
          required: true
          schema:
            $ref: '#/components/schemas/UserCredentials'
        - name: deviceId
          in: query
          description: If logged in from a worker
          required: false
          schema:
            $ref: '#/components/schemas/DeviceId'
      responses:
        '200':
          description: User logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentials'
        '404':
          description: User credentials invalid

    delete:
      tags:
        - user
      description: Deletes a user
      operationId: deleteUser
      parameters:
        - name: userCredentials
          in: path
          description: Credentials for user that should be deleted
          required: true
          schema:
            $ref: '#/components/schemas/UserCredentials'
      responses:
        '200':
          description: User Deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentials'



  /jobs/{userCredentials}:
    post:
      tags:
        - job
      description: Uploads a job to be computed
      operationId: postJob

      parameters:
        - name: userCredentials
          required: true
          in: path
          schema:
            $ref: '#/components/schemas/UserCredentials'
        - name: answersNeeded
          required: true
          in: query
          schema:
            type: integer
            format: int32
        - name: jobname
          required: true
          in: query
          schema:
            type: string
        - name: timeout
          required: true
          in: query
          schema:
            type: integer

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              format: byte
      responses:
        '200':
          description: Computed job
          content:
            text/plain:
              schema:
                type: integer
                format: int64


    get:
      tags:
        - job
      description: Returns all jobs uploaded by given user
      operationId: getJobsForUser
      parameters:
        - name: userCredentials
          in: path
          description: Username of user to filter jobs by
          required: true
          schema:
            $ref: '#/components/schemas/UserCredentials'
      responses:
        '200':
          description: List of jobs for selected user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Job'

  /jobs/{userCredentials}/{jobId}:
    delete:
      tags:
        - job
      description: Deletes a job
      operationId: deleteJob
      responses:
        '200':
          description: Job deleted
      parameters:
        - name: jobId
          in: path
          description: Job to be deleted
          required: true
          schema:
            type: integer
            format: int64
        - name: userCredentials
          required: true
          in: path
          schema:
            $ref: '#/components/schemas/UserCredentials'

  /jobs/{userCredentials}/{jobId}/result:
    get:
      tags:
        - job
      description: Gets the job result
      operationId: getJobResult

      parameters:
        - name: jobId
          in: path
          description: Job to query result for
          required: true
          schema:
            type: integer
            format: int64
        - name: userCredentials
          required: true
          in: path
          schema:
            $ref: '#/components/schemas/UserCredentials'

      responses:
        '200':
          description: Found the job result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobFiles'

        '202':
          description: Result file not ready yet


  /jobs/{userCredentials}/{jobId}/files:
    get:
      tags:
        - job
      description: Gets the job files
      operationId: getJobFiles

      parameters:
        - name: jobId
          in: path
          description: Job to get files from
          required: true
          schema:
            type: integer
            format: int64
        - name: userCredentials
          required: true
          in: path
          schema:
            $ref: '#/components/schemas/UserCredentials'

      responses:
        '200':
          description: Found the job files
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobFiles'

        '202':
          description: Could not find job


  # Jobs assigned to workers
  /assignments/{userCredentials}/{deviceId}:
    get:
      tags:
        - assignment
      description: Returns a job for the device to process
      operationId: getJobForDevice

      parameters:
        - name: userCredentials
          in: path
          description: User authentication
          required: true
          schema:
            $ref: '#/components/schemas/UserCredentials'
        - name: deviceId
          in: path
          description: Identification for device
          required: true
          schema:
            $ref: '#/components/schemas/DeviceId'

      responses:
        '200':
          description: Job id and files for job assigned to device
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobFiles'
        '202':
          description: No jobs available for device

  /assignments/{userCredentials}/{deviceId}/{jobId}:
    post:
      tags:
        - assignment
      description: Uploads the result
      operationId: uploadJobResult

      requestBody:
        content:
          application/json:
            schema:
              title: jobresult
              type: object
              properties:
                result:
                  $ref: '#/components/schemas/JobFiles'

      parameters:
        - name: userCredentials
          in: path
          description: User authentication from worker
          required: true
          schema:
            $ref: '#/components/schemas/UserCredentials'
        - name: deviceId
          in: path
          description: Identification for device
          required: true
          schema:
            $ref: '#/components/schemas/DeviceId'
        - name: jobId
          in: path
          description: Job upload result for
          required: true
          schema:
            type: integer
            format: int64

      responses:
        '200':
          description: Upload successful

    patch:
      tags:
        - assignment
      description: Notify the server that the worker is still working on the job
      operationId: pingAssignment
      parameters:
        - name: userCredentials
          in: path
          description: User authentication from worker
          required: true
          schema:
            $ref: '#/components/schemas/UserCredentials'
        - name: deviceId
          in: path
          description: Identification for device
          required: true
          schema:
            $ref: '#/components/schemas/DeviceId'
        - name: jobId
          in: path
          description: Job that the device is currently processing
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Continue
        '410':
          description: Assignment aborted

    delete:
      tags:
        - assignment
      description: Quits the current assignment
      operationId: quitAssignment
      responses:
        '200':
          description: Assignment quit
      parameters:
        - name: userCredentials
          in: path
          description: User authentication from worker
          required: true
          schema:
            $ref: '#/components/schemas/UserCredentials'
        - name: deviceId
          in: path
          description: Identification for device
          required: true
          schema:
            $ref: '#/components/schemas/DeviceId'
        - name: jobId
          in: path
          description: Job to quit
          required: true
          schema:
            type: integer
            format: int64
